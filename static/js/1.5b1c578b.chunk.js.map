{"version":3,"file":"static/js/1.5b1c578b.chunk.js","mappings":"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","sources":["webpack://goit-react-hw-08-phonebook/./src/components/Spinner/Spinner.module.scss?e73c","components/Spinner/Spinner.jsx","components/ContactForm/ContactForm.jsx","hooks/useAddContact.js","redux/contacts/contactsSelectors.js","components/Filter/Filter.jsx","components/ContactItem/ContactItem.jsx","webpack://goit-react-hw-08-phonebook/./src/components/ContactList/ContactList.module.scss?e1a7","components/ContactList/ContactList.jsx","pages/ContactsPage.jsx","services/normalizedName.js","services/validationPhone.js","utils/notification.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"spinner\":\"Spinner_spinner__bVWPl\",\"spin\":\"Spinner_spin__PDZin\"};","import { CgSpinner } from 'react-icons/cg';\n//Local import\nimport styles from './Spinner.module.scss';\n\nexport const Spinner = ({ size }) => {\n  return <CgSpinner size={size} className={styles.spinner} />;\n};\n","//Material UI\nimport TextField from '@mui/material/TextField';\nimport Button from '@mui/material/Button';\nimport Grid from '@mui/material/Grid';\nimport Box from '@mui/material/Box';\nimport Typography from '@mui/material/Typography';\nimport CssBaseline from '@mui/material/CssBaseline';\n//Local import\nimport { useAddContact } from 'hooks/useAddContact';\nimport { Spinner } from 'components/Spinner/Spinner';\n\nexport const ContactForm = () => {\n  const {\n    name,\n    phone,\n    handleAddContact,\n    handleChangeName,\n    handleChangePhone,\n    isLoading,\n    nameError,\n    phoneError,\n  } = useAddContact();\n\n  return (\n    <>\n      <Typography\n        component=\"h1\"\n        variant=\"h4\"\n        sx={{\n          textAlign: 'center',\n          marginBottom: 2,\n        }}\n      >\n        Phonebook\n      </Typography>\n\n      <Box\n        sx={{\n          padding: 4,\n          bgcolor: '#fff',\n          borderRadius: 4,\n\n          '&:hover': { boxShadow: '0px 0px 42px -20px rgba(0,0,0,0.3)' },\n        }}\n      >\n        <CssBaseline />\n        <Box component=\"form\" noValidate onSubmit={handleAddContact} sx={{}}>\n          <Grid container spacing={2}>\n            <Grid item xs={12}>\n              <TextField\n                error={nameError}\n                type=\"text\"\n                required\n                fullWidth\n                id=\"name\"\n                label=\"Name\"\n                name=\"name\"\n                variant=\"standard\"\n                onChange={handleChangeName}\n                value={name}\n              />\n            </Grid>\n\n            <Grid item xs={12}>\n              <TextField\n                type=\"tel\"\n                error={phoneError}\n                required\n                fullWidth\n                id=\"number\"\n                label=\"Phone\"\n                name=\"number\"\n                variant=\"standard\"\n                onChange={handleChangePhone}\n                value={phone}\n                onKeyPress={e => !/[0-9]/.test(e.key) && e.preventDefault()}\n              />\n            </Grid>\n          </Grid>\n\n          <Button\n            type=\"submit\"\n            disabled={name.length < 3}\n            fullWidth\n            variant=\"contained\"\n            sx={{ mt: 3 }}\n          >\n            Add contact {isLoading && <Spinner size={20} />}\n          </Button>\n        </Box>\n      </Box>\n    </>\n  );\n};\n","import { useState, useEffect } from 'react';\nimport { showError, showSuccess } from '../utils/notification';\nimport { useAddContactMutation, useGetContactsQuery } from '../redux/api';\nimport { normalizedName } from 'services/normalizedName';\nimport { validationPhone } from 'services/validationPhone';\n\nexport const useAddContact = () => {\n  const { data: contacts } = useGetContactsQuery();\n  const [addContact, { isError, isLoading, isSuccess }] =\n    useAddContactMutation();\n\n  const [name, setName] = useState('');\n  const [phone, setPhone] = useState('');\n  const [nameError, setNameError] = useState(false);\n  const [phoneError, setPhoneError] = useState(false);\n\n  const handleChangeName = e => setName(e.currentTarget.value);\n  const handleChangePhone = e => setPhone(e.currentTarget.value);\n\n  const handleAddContact = event => {\n    event.preventDefault();\n\n    const contactsName = contacts.map(contact => contact.name);\n\n    const isMatchName = contactsName.some(\n      contactName => contactName.toLowerCase() === name.toLowerCase()\n    );\n\n    if (isMatchName) {\n      setNameError(true);\n      return showError(`${name} is already in contacts`);\n    } else {\n      setNameError(false);\n    }\n\n    const isValidationPhoneError = validationPhone(phone);\n\n    if (isValidationPhoneError) {\n      return setPhoneError(true);\n    }\n\n    const newContact = {\n      name: normalizedName(name),\n      number: phone,\n    };\n\n    addContact(newContact);\n  };\n\n  useEffect(() => {\n    if (isSuccess) {\n      showSuccess('Contact added');\n      reset();\n    }\n  }, [isSuccess]);\n\n  useEffect(() => {\n    if (isError) {\n      showError(`Ups! Something was wrong`);\n    }\n  }, [isError]);\n\n  const reset = () => {\n    setName('');\n    setPhone('');\n    setNameError(false);\n    setPhoneError(false);\n  };\n\n  return {\n    name,\n    phone,\n    handleAddContact,\n    handleChangeName,\n    handleChangePhone,\n    isLoading,\n    nameError,\n    phoneError,\n  };\n};\n","export const getFilter = state => state.contacts.filter;\n","import { useSelector, useDispatch } from 'react-redux';\n//Material UI\nimport TextField from '@mui/material/TextField';\nimport Typography from '@mui/material/Typography';\nimport useMediaQuery from '@mui/material/useMediaQuery';\nimport Box from '@mui/material/Box';\n//Local import\nimport { setFilter } from 'redux/contacts/contactsSlice';\nimport { getFilter } from 'redux/contacts/contactsSelectors';\n\nconst Filter = () => {\n  const dispatch = useDispatch();\n  const filter = useSelector(getFilter);\n\n  const matches = useMediaQuery('(min-width:600px)');\n\n  const handleChangeFilter = event => {\n    dispatch(setFilter(event.currentTarget.value));\n  };\n\n  return (\n    <Box component=\"div\" sx={{ marginTop: `${matches ? '0px' : '25px'}` }}>\n      <Typography\n        component=\"h2\"\n        variant=\"h6\"\n        sx={{\n          textAlign: 'center',\n          marginBottom: 2,\n        }}\n      >\n        Your contacts\n      </Typography>\n\n      <TextField\n        fullWidth\n        id=\"filter\"\n        label=\"Find contact by name\"\n        name=\"filter\"\n        variant=\"standard\"\n        onChange={handleChangeFilter}\n        value={filter}\n        sx={{\n          '& label': { fontSize: 14 },\n        }}\n      />\n    </Box>\n  );\n};\n\nexport default Filter;\n","import { useNavigate } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n//Material UI\nimport Typography from '@mui/material/Typography';\nimport Box from '@mui/material/Box';\nimport IconButton from '@mui/material/IconButton';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport EditIcon from '@mui/icons-material/Edit';\n//Local import\nimport { Spinner } from '../Spinner/Spinner';\nimport { useDeleteContactMutation } from 'redux/api';\n\nconst ContactItem = ({ contact: { id, name, number } }) => {\n  const navigate = useNavigate();\n  const [deleteContact, { isLoading: isLoadingDelete }] =\n    useDeleteContactMutation();\n\n  return (\n    <>\n      <Box\n        component=\"li\"\n        sx={{\n          display: 'flex',\n          alignItems: 'center',\n        }}\n      >\n        <Typography component=\"p\" variant=\"span\" sx={{ width: '45%' }}>\n          {name}:\n        </Typography>\n\n        <Typography component=\"p\" variant=\"span\" sx={{ textAlign: 'left' }}>\n          {number}\n        </Typography>\n\n        <IconButton\n          aria-label=\"edit\"\n          onClick={() => navigate(`/contacts/edit/${id}`)}\n          sx={{\n            marginLeft: 'auto',\n            '&:hover, &:focus': { bgcolor: '#d7f0d0', color: '#468d46' },\n          }}\n        >\n          <EditIcon />\n        </IconButton>\n\n        <IconButton\n          aria-label=\"delete\"\n          onClick={() => deleteContact(id)}\n          disabled={isLoadingDelete}\n          sx={{\n            marginLeft: '3px',\n            '&:hover, &:focus': { bgcolor: '#f3dacf', color: '#d31616' },\n          }}\n        >\n          {!isLoadingDelete ? <DeleteIcon /> : <Spinner size={20} />}\n        </IconButton>\n      </Box>\n    </>\n  );\n};\n\nContactItem.propTypes = {\n  contact: PropTypes.shape({\n    id: PropTypes.string.isRequired,\n    name: PropTypes.string.isRequired,\n    number: PropTypes.string.isRequired,\n  }).isRequired,\n};\n\nexport default ContactItem;\n","// extracted by mini-css-extract-plugin\nexport default {\"list\":\"ContactList_list__I4JxK\",\"error\":\"ContactList_error__O58n0\"};","import { useEffect } from 'react';\nimport { useSelector } from 'react-redux';\n//Material UI\nimport Box from '@mui/material/Box';\n//Local import\nimport ContactItem from '../ContactItem/ContactItem';\nimport style from './ContactList.module.scss';\nimport { useGetContactsQuery } from 'redux/api';\nimport { getFilter } from 'redux/contacts/contactsSelectors';\n\nconst ContactList = () => {\n  const { data: contacts, isError, refetch } = useGetContactsQuery();\n\n  const filter = useSelector(getFilter);\n\n  const getFilteredContacts = () => {\n    const normalizeFilter = filter.toLowerCase().trim();\n\n    return contacts?.filter(({ name }) =>\n      name.toLowerCase().includes(normalizeFilter)\n    );\n  };\n\n  const visibleContacts = getFilteredContacts();\n\n  useEffect(() => {\n    refetch();\n  }, [refetch]);\n\n  return (\n    <Box\n      component=\"ul\"\n      sx={{\n        display: 'flex',\n        flexDirection: 'column',\n        rowGap: 1,\n        width: '100%',\n        marginTop: 2,\n      }}\n    >\n      {contacts && (\n        <>\n          {visibleContacts.length !== 0 ? (\n            visibleContacts.map(contact => {\n              return <ContactItem key={contact.id} contact={contact} />;\n            })\n          ) : (\n            <li className={style.error}>Not found name</li>\n          )}\n        </>\n      )}\n\n      {isError && <li>Ups, something was wrong! Reload page, please</li>}\n    </Box>\n  );\n};\n\nexport default ContactList;\n","import { ToastContainer } from 'react-toastify';\nimport { Outlet } from 'react-router-dom';\nimport 'react-toastify/dist/ReactToastify.css';\n//Material UI\nimport Container from '@mui/material/Container';\nimport Grid from '@mui/material/Grid';\n//Local import\nimport { ContactForm } from '../components/ContactForm/ContactForm';\nimport Filter from '../components/Filter/Filter';\nimport ContactList from '../components/ContactList/ContactList';\n\nconst ContactsPage = () => {\n  return (\n    <>\n      <Container\n        component=\"main\"\n        sx={{\n          paddingTop: 4,\n        }}\n      >\n        <Grid container columnSpacing={{ sm: 5, md: 10 }}>\n          <Grid item xs={12} sm={5}>\n            <ContactForm />\n          </Grid>\n\n          <Grid item xs={12} sm={7} sx={{}}>\n            <Filter />\n            <ContactList />\n          </Grid>\n        </Grid>\n        <ToastContainer />\n      </Container>\n      <Outlet />\n    </>\n  );\n};\n\nexport default ContactsPage;\n","export const normalizedName = name => {\n  if (name === '') return '';\n\n  return name\n    .trim()\n    .split(/\\s+/)\n    .map(word => word[0].toUpperCase() + word.substring(1))\n    .join(' ');\n};\n","import { showError } from '../utils/notification';\n\nexport const validationPhone = phone => {\n  if (phone.length < 7 || phone === '') {\n    showError('Phone must have 7 character min');\n    return true;\n  } else {\n    return false;\n  }\n};\n","import { toast } from 'react-toastify';\n\nexport const showError = message =>\n  toast.error(message, {\n    position: 'top-right',\n    autoClose: 2000,\n    hideProgressBar: false,\n    closeOnClick: true,\n    pauseOnHover: true,\n    draggable: true,\n    progress: undefined,\n    theme: 'dark',\n  });\n\nexport const showSuccess = message =>\n  toast.success(message, {\n    position: 'top-right',\n    autoClose: 2000,\n    hideProgressBar: false,\n    closeOnClick: true,\n    pauseOnHover: true,\n    draggable: true,\n    progress: undefined,\n    theme: 'dark',\n  });\n"],"names":["Spinner","size","className","styles","ContactForm","contacts","useGetContactsQuery","data","useAddContactMutation","addContact","isError","isLoading","isSuccess","useState","name","setName","phone","setPhone","nameError","setNameError","phoneError","setPhoneError","useEffect","showSuccess","reset","showError","handleAddContact","event","preventDefault","map","contact","some","contactName","toLowerCase","validationPhone","newContact","normalizedName","number","handleChangeName","e","currentTarget","value","handleChangePhone","useAddContact","Typography","component","variant","sx","textAlign","marginBottom","Box","padding","bgcolor","borderRadius","boxShadow","CssBaseline","noValidate","onSubmit","Grid","container","spacing","item","xs","TextField","error","type","required","fullWidth","id","label","onChange","onKeyPress","test","key","Button","disabled","length","mt","getFilter","state","filter","dispatch","useDispatch","useSelector","matches","useMediaQuery","marginTop","setFilter","fontSize","navigate","useNavigate","useDeleteContactMutation","deleteContact","isLoadingDelete","display","alignItems","width","IconButton","onClick","marginLeft","color","Edit","Delete","refetch","visibleContacts","normalizeFilter","trim","includes","getFilteredContacts","flexDirection","rowGap","style","Container","paddingTop","columnSpacing","sm","md","split","word","toUpperCase","substring","join","message","toast","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","theme"],"sourceRoot":""}