{"version":3,"file":"static/js/432.1dfc443c.chunk.js","mappings":"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","sources":["pages/RegisterPage.jsx","services/normalizedName.js","utils/notification.js"],"sourcesContent":["import { useEffect } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport { ToastContainer } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n//Material UI\nimport Avatar from '@mui/material/Avatar';\nimport Button from '@mui/material/Button';\nimport CssBaseline from '@mui/material/CssBaseline';\nimport TextField from '@mui/material/TextField';\nimport Link from '@mui/material/Link';\nimport Grid from '@mui/material/Grid';\nimport Box from '@mui/material/Box';\nimport LockOutlinedIcon from '@mui/icons-material/LockOutlined';\nimport Typography from '@mui/material/Typography';\nimport Container from '@mui/material/Container';\n//Local import\nimport { useRegisterMutation } from 'redux/api';\nimport { normalizedName } from 'services/normalizedName';\nimport { showError } from '../utils/notification';\n\nconst RegisterPage = () => {\n  const [registration, { isError }] = useRegisterMutation();\n\n  const handleSubitRegistration = event => {\n    event.preventDefault();\n    const data = new FormData(event.currentTarget);\n\n    const newUser = {\n      name: normalizedName(data.get('name')),\n      email: data.get('email').trim(),\n      password: data.get('password'),\n    };\n\n    if (\n      newUser.name === '' ||\n      newUser.email === '' ||\n      newUser.password === ''\n    ) {\n      return showError('One of the fields is empty');\n    }\n\n    registration(newUser);\n  };\n\n  useEffect(() => {\n    if (isError) {\n      showError('Ups! Something was wrong. Try again');\n    }\n  }, [isError]);\n\n  return (\n    <Container\n      component=\"main\"\n      maxWidth=\"xs\"\n      sx={{\n        marginTop: 4,\n      }}\n    >\n      <Box\n        sx={{\n          padding: 4,\n          bgcolor: '#fff',\n          borderRadius: 15,\n\n          '&:hover': { boxShadow: '0px 0px 42px -20px rgba(0,0,0,0.3)' },\n        }}\n      >\n        <CssBaseline />\n        <Box\n          sx={{\n            display: 'flex',\n            flexDirection: 'column',\n            alignItems: 'center',\n          }}\n        >\n          <Avatar sx={{ m: 1, bgcolor: 'secondary.main' }}>\n            <LockOutlinedIcon />\n          </Avatar>\n\n          <Typography component=\"h1\" variant=\"h5\">\n            Sign Up\n          </Typography>\n\n          <Box\n            component=\"form\"\n            noValidate\n            onSubmit={handleSubitRegistration}\n            sx={{ mt: 3 }}\n          >\n            <Grid container spacing={2}>\n              <Grid item xs={12} >\n                     <Typography\n                  sx={{\n                       textAlign: 'center',\n                    color: \"#cfcfcf\",\n                        }}\n                     >\n       Name*</Typography>\n                <TextField\n                  autoComplete=\"given-name\"\n                  type=\"text\"\n                  name=\"name\"\n                  required\n                  fullWidth\n                  id=\"name\"\n                  // label=\"Name\"\n                  variant=\"standard\"\n                />\n              </Grid>\n\n              <Grid item xs={12}>\n                     <Typography\n                  sx={{\n                       textAlign: 'center',\n                    color: \"#cfcfcf\",\n                        }}\n                     >\n       Email Address*</Typography>\n                <TextField\n                  required\n                  type=\"email\"\n                  fullWidth\n                  id=\"email\"\n                  // label=\"Email Address\"\n                  name=\"email\"\n                  autoComplete=\"email\"\n                  variant=\"standard\"\n                />\n              </Grid>\n\n              <Grid item xs={12}>\n                     <Typography\n                  sx={{\n                    textAlign: 'center',\n                    color: \"#cfcfcf\",\n                        }}\n                     >\n       Password*</Typography>\n                <TextField\n                  required\n                  fullWidth\n                  name=\"password\"\n                  // label=\"Password\"\n                  type=\"password\"\n                  id=\"password\"\n                  autoComplete=\"new-password\"\n                  variant=\"standard\"\n                />\n              </Grid>\n            </Grid>\n\n            <Button\n              type=\"submit\"\n              fullWidth\n              variant=\"contained\"\n              sx={{ mt: 3, mb: 2, backgroundColor: \"#8A2BE2\"}}\n            >\n              Registration\n            </Button>\n\n            <Grid container justifyContent=\"flex-end\">\n              <Grid item>\n                <Link component={RouterLink} to=\"/login\" variant=\"body2\">\n                  Already have an account? Sign In\n                </Link>\n              </Grid>\n            </Grid>\n          </Box>\n        </Box>\n      </Box>\n      <ToastContainer />\n    </Container>\n  );\n};\n\nexport default RegisterPage;","export const normalizedName = name => {\n  if (name === '') return '';\n\n  return name\n    .trim()\n    .split(/\\s+/)\n    .map(word => word[0].toUpperCase() + word.substring(1))\n    .join(' ');\n};\n","import { toast } from 'react-toastify';\n\nexport const showError = message =>\n  toast.error(message, {\n    position: 'top-right',\n    autoClose: 2000,\n    hideProgressBar: false,\n    closeOnClick: true,\n    pauseOnHover: true,\n    draggable: true,\n    progress: undefined,\n    theme: 'dark',\n  });\n\nexport const showSuccess = message =>\n  toast.success(message, {\n    position: 'top-right',\n    autoClose: 2000,\n    hideProgressBar: false,\n    closeOnClick: true,\n    pauseOnHover: true,\n    draggable: true,\n    progress: undefined,\n    theme: 'dark',\n  });\n"],"names":["useRegisterMutation","registration","isError","useEffect","showError","component","maxWidth","sx","marginTop","padding","bgcolor","borderRadius","boxShadow","display","flexDirection","alignItems","m","variant","noValidate","onSubmit","event","preventDefault","data","FormData","currentTarget","newUser","name","normalizedName","get","email","trim","password","mt","container","spacing","item","xs","textAlign","color","autoComplete","type","required","fullWidth","id","mb","backgroundColor","justifyContent","RouterLink","to","split","map","word","toUpperCase","substring","join","message","toast","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","theme","showSuccess"],"sourceRoot":""}